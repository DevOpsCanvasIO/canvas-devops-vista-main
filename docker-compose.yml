version: '3.8'

services:
  # DevOpsCanvas Dashboard
  dashboard:
    build: .
    container_name: devopscanvas-dashboard
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_ENV=docker
    networks:
      - devopscanvas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development version with hot reload
  dashboard-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: devopscanvas-dashboard-dev
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_ENV=development
    networks:
      - devopscanvas-network
    restart: unless-stopped
    profiles:
      - dev

  # Optional: Redis for caching (future implementation)
  redis:
    image: redis:7-alpine
    container_name: devopscanvas-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devopscanvas-network
    restart: unless-stopped
    profiles:
      - with-cache

  # Optional: PostgreSQL database (future implementation)
  postgres:
    image: postgres:15-alpine
    container_name: devopscanvas-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=devops_dashboard
      - POSTGRES_USER=devops
      - POSTGRES_PASSWORD=devops123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devopscanvas-network
    restart: unless-stopped
    profiles:
      - with-db

networks:
  devopscanvas-network:
    driver: bridge
    name: devopscanvas-network

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
